@model CrudAppUsindADO.Models.EmployeeCreateViewModel

@{
    ViewData["Title"] = "Edit";
}

<div class="container mt-5 bg-image">
    <div class="bg-primary p-3 rounded mb-4 text-center text-white">
        <h1>Edit Student</h1>
    </div>

    <div class="row justify-content-center">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <form asp-action="Edit" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="Employee.Id" />

                        <div class="form-group input-group mb-3">
                            <span class="input-group-text" id="basic-addon1">Name</span>
                            <input asp-for="Employee.Name" class="form-control" />
                            <span asp-validation-for="Employee.Name" class="text-danger"></span>
                        </div>

                        <div class="form-group input-group mb-3">
                            <span class="input-group-text" id="basic-addon1">City</span>
                            <input asp-for="Employee.City" class="form-control" />
                            <span asp-validation-for="Employee.City" class="text-danger"></span>
                        </div>

                        <div class="form-group input-group mb-3">
                            <span class="input-group-text" id="basic-addon1">Pincode</span>
                            <input asp-for="Employee.Pincode" class="form-control" required minlength="6" maxlength="6" />
                            <span asp-validation-for="Employee.Pincode" class="text-danger"></span>
                        </div>
                        <div class="form-group input-group mb-3">
                            <span class="input-group-text" id="basic-addon1">Email</span>
                            <input asp-for="Employee.Email" class="form-control" />
                            <span asp-validation-for="Employee.Email" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label>Subjects</label>
                            <div>
                                @for (int i = 0; i < Model.AllSubjects.Count; i++)
                                {
                                    <div class="form-check">
                                        <input type="checkbox" name="SelectedSubjectIds" value="@Model.AllSubjects[i].SubjectID"
                                        @(Model.SelectedSubjectIds.Contains(Model.AllSubjects[i].SubjectID) ? "checked" : "") class="form-check-input" />
                                        <label class="form-check-label">@Model.AllSubjects[i].SubjectName</label>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="form-group mt-4">
                            <input type="submit" value="Save" class="btn btn-primary btn-block" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="row justify-content-center mt-4">
        <div class="col-md-6 text-center">
            <a asp-action="Index" class="btn btn-secondary">Back to Student Details</a>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
